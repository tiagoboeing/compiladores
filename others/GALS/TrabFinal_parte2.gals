#Options
GenerateScanner = true
GenerateParser = false
Language = Java
ScannerName = Lexico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
#RegularDefinitions
questao_a: ([a-z]|[A-Z][a-z0-9_])([a-z0-9_]|([A-Z][a-z0-9_]))*|[A-Z]

questao_b: [1-9][0-9]*|0

questao_c: ([1-9][0-9]*|0)\.([0-9]*[1-9]|0)

questao_d: \"[^\"\n\\]*\"

questao_e: \\[snt]

questao_f: \-\-[^\n]*

questao_g: #\|[^#\|](((\|[^#\|])?(#+[^#\|])?.)[^\|#])*\|#

#Tokens
// identificador
id: {questao_a}

// constante inteira
const_inteira: {questao_b}


// const real
const_real: {questao_c}


// const literal
const_literal: {questao_d}


// const caracter
const_caracter: {questao_e}


// comentário de linha
comentario_linha: {questao_f}


// comentário de bloco
comentario_bloco: {questao_g}


// palavras reservadas
and = id : "and"
begin = id : "begin"
bool = id : "bool"
char = id: "char"
end = id: "end"
false = id: "false"
float = id: "float"
forward = id: "forward"
ifFalseDo = id: "ifFalseDo"
ifTrueDo = id: "ifTrueDo"
int = id: "int"
main = id: "main"
module = id: "module"
not = id: "not"
or = id: "or"
read = id: "read"
string = id: "string"
true = id: "true"
void = id: "void"
whileFalseDo = id: "whileFalseDo"
whileTrueDo = id: "whileTrueDo"
write = id: "write"

// símbolos especiais
"("
")"
"=="
"!="
"<"
"<="
">"
">="
"+"
"-"
"*"
"/"
","
"."
";"
":"
"="
"+="
"-="
"^"

// caracteres de formatação
:[\s\n\t]

